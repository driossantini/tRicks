% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms_versioning.R
\name{version_control}
\alias{version_control}
\title{Version control for saved image and object files}
\usage{
version_control(
  current_files,
  versioning = TRUE,
  vers_dir = "versions",
  hidden = TRUE
)
}
\arguments{
\item{current_files}{A named vector or list of file paths to the saved files.
For instance, names might be \code{"png"}, \code{"pdf"}, \code{"rds"}.}

\item{hidden}{Logical; if \code{TRUE}, the versioning directory will be created as a hidden folder
(by prepending a dot to the \code{version_dir} name). Defaults to \code{FALSE}.}

\item{run_versioning}{Logical indicating whether to perform version control.
Defaults to \code{TRUE}. If \code{FALSE}, the function simply passes through the input.}

\item{version_dir}{Character string specifying the subdirectory to store versioned files.
This folder will be created inside the parent of the format subfolders.}
}
\value{
Invisibly returns the original \code{current_files}.
}
\description{
Pipeable version control for image and object files

When piped from \code{multisave()}, this function expects a named vector or list of file paths.
For each file, it will:
\itemize{
\item Determine the base output directory (assumed to be one level above the format subfolder)
\item Create or use a subfolder named by \code{version_dir} (e.g. versions) within that base directory
\item Within \code{version_dir}, create a subfolder for each format (e.g. png, pdf, rds)
\item Compute a hash for each current file and compare it to the previous version's hash
\item If the hash differs, copy the file into the corresponding format subfolder with a timestamp
}
}
\examples{
\dontrun{
  multisave(object = myplot,
            formats = c("png", "pdf", "rds"),
            output_dir = "docmaker",
            name = "myplot") |>
    version_control(TRUE, "versions")
}

}
